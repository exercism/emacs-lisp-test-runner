{
  "version": 2,
  "status": "error",
  "message": "Loading /solution/example-syntax-error.el (source)...\r\n\r\nError: void-variable (DEF&*@)\r\n  mapbacktrace(#f(compiled-function (evald func args flags) #<bytecode >))\r\n  debug-early-backtrace()\r\n  debug-early(error (void-variable DEF&*@))\r\n  eval-buffer(#<buffer  > nil \"/solution/example-syntax-error.el\" nil t)\r\n  load-with-code-conversion(\"/solution/example-syntax-error.el\" \"/solution/example-syntax-error.el\" nil nil)\r\n  load(\"/solution/example-syntax-error.el\" nil nil t)\r\n  load-file(\"example-syntax-error.el\")\r\n  eval-buffer(#<buffer  > nil \"/solution/example-syntax-error-test.el\" nil t)\r\n  load-with-code-conversion(\"/solution/example-syntax-error-test.el\" \"/solution/example-syntax-error-test.el\" nil t)\r\n  load(\"/solution/example-syntax-error-test.el\" nil t)\r\n  command-line-1((\"-l\" \"ert\" \"-l\" \"/solution/example-syntax-error-test.el\" \"-f\" \"ert-run-tests-batch-and-exit\"))\r\n  command-line()\r\n  normal-top-level()\r\nSymbol's value as variable is void: DEF&*@\r",
  "tests": [
    {
      "name": "vanilla-leap-year",
      "test_code": "(should (leap-year-p 1996))",
      "status": "error",
      "message": null
    },
    {
      "name": "any-old-year",
      "test_code": "(should-not (leap-year-p 1997))",
      "status": "error",
      "message": null
    },
    {
      "name": "non-leap-even-year",
      "test_code": "(should-not (leap-year-p 1997))",
      "status": "error",
      "message": null
    },
    {
      "name": "century",
      "test_code": "(should-not (leap-year-p 1900))",
      "status": "error",
      "message": null
    },
    {
      "name": "exceptional-century",
      "test_code": "(should (leap-year-p 2000))",
      "status": "error",
      "message": null
    }
  ]
}
