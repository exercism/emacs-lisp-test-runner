{
  "version": 1,
  "status": "fail",
  "message": "Loading /solution/example-partial-fail.el (source)...\nRunning 5 tests \n   \u001b[01;32m\u001b[Kpassed  1/5  any-old-year\u001b[m\u001b[K\n   \u001b[01;32m\u001b[Kpassed  2/5  century\u001b[m\u001b[K\nTest exceptional-century backtrace:\n  signal(ert-test-failed (((should (leap-year-p 2000)) :form (leap-yea\n  ert-fail(((should (leap-year-p 2000)) :form (leap-year-p 2000) :valu\n  (if (unwind-protect (setq value-22 (apply fn-20 args-21)) (setq form\n  (let (form-description-24) (if (unwind-protect (setq value-22 (apply\n  (let ((value-22 (quote ert-form-evaluation-aborted-23))) (let (form-\n  (let* ((fn-20 (function leap-year-p)) (args-21 (condition-case err (\n  (lambda nil (let* ((fn-20 (function leap-year-p)) (args-21 (conditio\n  ert--run-test-internal(#s(ert--test-execution-info :test #s(ert-test\n  ert-run-test(#s(ert-test :name exceptional-century :documentation ni\n  ert-run-or-rerun-test(#s(ert--stats :selector t :tests [#s(ert-test \n  ert-run-tests(t #f(compiled-function (event-type &rest event-args) #\n  ert-run-tests-batch(nil)\n  ert-run-tests-batch-and-exit()\n  command-line-1((\"-l\" \"ert\" \"-l\" \"/opt/test-runner/tests/example-part\n  command-line()\n  normal-top-level()\nTest exceptional-century condition:\n    (ert-test-failed\n     ((should\n       (leap-year-p 2000))\n      :form\n      (leap-year-p 2000)\n      :value nil))\n   \u001b[01;31m\u001b[KFAILED  3/5  exceptional-century\u001b[m\u001b[K\n   \u001b[01;32m\u001b[Kpassed  4/5  non-leap-even-year\u001b[m\u001b[K\n   \u001b[01;32m\u001b[Kpassed  5/5  vanilla-leap-year\u001b[m\u001b[K\n\nRan 5 tests, 4 results as expected, 1 unexpected \n\n1 unexpected results:\n   \u001b[01;31m\u001b[KFAILED  exceptional-century\u001b[m\u001b[K"
}
